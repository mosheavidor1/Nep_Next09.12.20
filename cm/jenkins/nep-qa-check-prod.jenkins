#!/usr/bin/env groovy

node('WinProdStat_10_85_24_247') {
    try {

        SOURCES_REPOSITORY = 'https://bitbucket.trustwave.com/scm/nep/nep-qa.git'
        MODULE_ARTIFACT_SRC="https://nexus01.trustwave.com/service/local/artifact/maven/redirect?r=public&g=com.trustwave.nep.nep-qa&a=nep-qa-automation&e=jar&c=jar-with-dependencies&v=LATEST"
        MODULE_ARTIFACT_DST="${WORKSPACE}\\nep-qa-automation\\nep-qa-automation.jar"
        DISPLAY_VERSION="${BUILD_NUMBER} - ${REGION}"

        stage("Clean Workspace") {
            echo """
            Check prod status:
            REGION: ${REGION}
            """
           // deleteDir()
        }            
        stage('Get sources from BitBucket') {			
			git branch: "master", credentialsId: 'svc_wafbuild', url: "${SOURCES_REPOSITORY}"
		}

        stage("download jar from nexus") {
            powershell """
				Get-ChildItem env:
				
				echo "From: ${MODULE_ARTIFACT_SRC}"
				echo "To: 	${MODULE_ARTIFACT_DST}" 
	
				##### Download artifact from Nexus
				echo "curl -o ${MODULE_ARTIFACT_DST} ${MODULE_ARTIFACT_SRC}"
				curl -o "${MODULE_ARTIFACT_DST}" "$MODULE_ARTIFACT_SRC"
				
				if ( -Not (Test-Path "${MODULE_ARTIFACT_DST}")) {
					Write-host "${MODULE_ARTIFACT_DST} file can't be downloaded"
					exit 1
				}
			"""
        }

        stage("Check prod status") {    
            bat """
				java -jar "${MODULE_ARTIFACT_DST}" "${SETTINGS_XML}" "${REGION}" 
				if ERRORLEVEL 1  set test_result=false
				
				xcopy ${WORKSPACE}\\test-output\\* C:\\jenkins\\builds\\${DISPLAY_VERSION}\\  /O /X /E /H /K /Y
				mkdir ${WORKSPACE}\\test-output\\tmp\\pics
				xcopy ${WORKSPACE}\\test-output\\capture\\*.png ${WORKSPACE}\\test-output\\tmp\\pics\\  /O /X /E /H /K /Y
				
				if "%test_result%" == "false" EXIT 1
			"""
        }

        stage('Send Email') {
			sendEmail("Success")
        }
        
    } //global try
    catch (exc) {
        currentBuild.result = "FAILURE"
        echo "general Pipeline failure."
        sendEmail("Failed")
        throw exc
    } // catch
    finally {
        // empty
    } // finally
}

def sendEmail(status) {
	emailext attachmentsPattern: "test-output/emailable-report.html, test-output/tmp/**/*.png", 
		body: '${SCRIPT, template="groovy-html.template"}, ${FILE,path="test-output/emailable-report.html"}',
		subject: "${env.JOB_NAME}- TEST # ${DISPLAY_VERSION} - " + status,
		mimeType: 'text/html',
		from: 'svc_wafbuild@trustwave.com',
		to: "${EMAIL_LIST}"
}
